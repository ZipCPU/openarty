################################################################################
##
## Filename: 	oledrgb.txt
## {{{
## Project:	OpenArty, an entirely open SoC based upon the Arty platform
##
## Purpose:	To describe how to interact with an OLED device driver, in order
##		to drive an OLED display.
##
## Creator:	Dan Gisselquist, Ph.D.
##		Gisselquist Technology, LLC
##
################################################################################
## }}}
## Copyright (C) 2017-2024, Gisselquist Technology, LLC
## {{{
## This file is part of the OpenArty project.
##
## The OpenArty project is free software and gateware, licensed under the terms
## of the 3rd version of the GNU General Public License as published by the
## Free Software Foundation.
##
## This project is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTIBILITY or
## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
## for more details.
##
## You should have received a copy of the GNU General Public License along
## with this program.  (It's in the $(ROOT)/doc directory.  Run make with no
## target there if the PDF file isn't present.)  If not, see
## <http://www.gnu.org/licenses/> for a copy.
## }}}
## License:	GPL, v3, as defined and found on www.gnu.org,
## {{{
##		http://www.gnu.org/licenses/gpl.html
##
################################################################################
##
## }}}
@PREFIX=oledrgb
@NADDR=4
@SLAVE.TYPE=DOUBLE
@SLAVE.BUS=wb
@DEVID=OLEDRGB
@ACCESS=@$(DEVID)_ACCESS
@INT.OLED.WIRE=	@$(PREFIX)_int
@INT.OLED.PIC=syspic
@MAIN.PORTLIST=
		// @$(DEVID) control interface (roughly SPI)
		o_@$(PREFIX)_sck, o_@$(PREFIX)_cs_n, o_@$(PREFIX)_mosi,
		o_@$(PREFIX)_dcn, o_@$(PREFIX)_reset_n,
		o_@$(PREFIX)_vccen, o_@$(PREFIX)_pmoden
@MAIN.IODECL=
	// @$(DEVID) interface
	output	wire		o_@$(PREFIX)_sck, o_@$(PREFIX)_cs_n,
				o_@$(PREFIX)_mosi,
				o_@$(PREFIX)_dcn, o_@$(PREFIX)_reset_n,
				o_@$(PREFIX)_vccen, o_@$(PREFIX)_pmoden;
@MAIN.INSERT=
	wboledrgb #(.CBITS(4)) @$(PREFIX)i(i_clk,
		@$(SLAVE.PORTLIST),
		o_@$(PREFIX)_sck, o_@$(PREFIX)_cs_n, o_@$(PREFIX)_mosi, o_@$(PREFIX)_dcn,
		{ o_@$(PREFIX)_reset_n, o_@$(PREFIX)_vccen, o_@$(PREFIX)_pmoden },
		@$(PREFIX)_int);
@MAIN.ALT=
	assign	o_@$(PREFIX)_cs_n    = 1'b1;
	assign	o_@$(PREFIX)_sck     = 1'b1;
	assign	o_@$(PREFIX)_mosi    = 1'b1;
	assign	o_@$(PREFIX)_dcn     = 1'b1;
	assign	o_@$(PREFIX)_reset_n = 1'b0;
	assign	o_@$(PREFIX)_vccen   = 1'b0;
	assign	o_@$(PREFIX)_pmoden  = 1'b0;

@REGS.N=4
@REGS.NOTE=// @$(DEVID)
@REGS.0= 0 R_@$(DEVID)_CMD		@$(DEVID)  OLED
@REGS.1= 1 R_@$(DEVID)_CDATA		@$(DEVID)A OLEDCA
@REGS.2= 2 R_@$(DEVID)_CDATB		@$(DEVID)B OLEDCB
@REGS.3= 3 R_@$(DEVID)_DATA		@$(DEVID)D ODATA
@BDEF.DEFN=
// Definitions to interact with the @$(DEVID) device
#define	@$(DEVID)_PMODEN		0x0010001
#define	@$(DEVID)_PMODEN_OFF	0x0010000
#define	@$(DEVID)_IOPWR		@$(DEVID)_PMODEN
#define	@$(DEVID)_VCCEN		0x0020002 // Was VCC
#define	@$(DEVID)_VCC_DISABLE	0x0020000
#define	@$(DEVID)_RESET		0x0040000
#define	@$(DEVID)_RESET_CLR		0x0040004
#define	@$(DEVID)_FULLPOWER		(@$(DEVID)_PMODEN|@$(DEVID)_VCCEN|@$(DEVID)_RESET_CLR)
#define	@$(DEVID)_POWER_DOWN		(@$(DEVID)_PMODEN_OFF|@$(DEVID)_VCCEN|@$(DEVID)_RESET_CLR)
#define	@$(DEVID)_BUSY(dev)		(dev->o_ctrl & 1)
#define	@$(DEVID)_DISPLAYON		0x0af	// To be sent over the control channel
typedef	struct @$(DEVID)_S {
	unsigned	o_ctrl, o_a, o_b, o_data;
} @$(DEVID);

@SIM.CLOCK=clk
@SIM.INCLUDE=
#include "oledsim.h"
@SIM.DEFNS=
	OLEDWIN		m_@$(PREFIX);
@SIM.INIT=
		Glib::signal_idle().connect(sigc::mem_fun((*this),&MAINTB::on_tick));
@SIM.TICK=
		//
		// Simulate the OLEDRGB
		//
		m_@$(PREFIX)(m_core->o_@$(PREFIX)_pmoden,
			m_core->o_@$(PREFIX)_reset_n,
			m_core->o_@$(PREFIX)_vccen,
			m_core->o_@$(PREFIX)_cs_n,
			m_core->o_@$(PREFIX)_sck,
			m_core->o_@$(PREFIX)_dcn,
			m_core->o_@$(PREFIX)_mosi);
@SIM.METHODS=
	bool	on_tick(void) {
		if (!m_done) {
			tick();
			return true;
		 } else
			return false;
	}
@BDEF.IONAME=_@$(PREFIX)
@BDEF.IOTYPE=@$(DEVID)
@BDEF.OSDEF= _BOARD_HAS_@$(DEVID)
@BDEF.OSVAL= static volatile @$BDEF.IOTYPE *const @$BDEF.IONAME = ((@$BDEF.IOTYPE *)@$[0x%08x]REGBASE);
@BDEF.INCLUDE=
#define	SYSINT_OLED	SYSINT(@$INT.OLED.syspic.ID)
